---
import type { HTMLAttributes } from 'astro/types';
import { Check, Clipboard as ClipboardIcon } from 'lucide-astro';
import { twMerge } from 'tailwind-merge';

type Props = HTMLAttributes<'button'> & { content?: string };

const { class: className, 'aria-label': ariaLabel, content, ...props } = Astro.props;
---

<button
  {...props}
  data-copied="false"
  data-content={content}
  aria-label={ariaLabel ?? 'Copy to clipboard'}
  class={twMerge(
    'group flex select-none items-center gap-2 rounded hover:text-emphasis',
    'focus-visible:outline-none focus-visible:ring-2 motion-safe:transition-colors',
    className,
  )}
>
  <ClipboardIcon size={12} aria-hidden class="group-data-[copied=true]:hidden" />
  <Check size={12} aria-hidden class="group-data-[copied=false]:hidden" />
  <slot />
</button>

<script>
  document.addEventListener('astro:page-load', () => {
    const targets: NodeListOf<HTMLButtonElement> = document.querySelectorAll('button[data-copied]');

    targets.forEach((target) => {
      target.addEventListener('click', () => {
        target.dataset.copied = 'true';
        setTimeout(() => (target.dataset.copied = 'false'), 1000);

        if (target.dataset.content) navigator.clipboard.writeText(target.dataset.content);
        else {
          const wrapper = target.closest('[data-clipboard-wrapper]');
          const content = wrapper?.querySelector('[data-clipboard-content]')?.textContent?.trim();
          if (content) navigator.clipboard.writeText(content);
        }
      });
    });
  });
</script>
